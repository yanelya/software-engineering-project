[{"/Users/yanelyayala/Documents/4351 Software Engineering/software-engineering-project/frontend/src/index.js":"1","/Users/yanelyayala/Documents/4351 Software Engineering/software-engineering-project/frontend/src/App.js":"2","/Users/yanelyayala/Documents/4351 Software Engineering/software-engineering-project/frontend/src/components/Navbar.js":"3","/Users/yanelyayala/Documents/4351 Software Engineering/software-engineering-project/frontend/src/components/RegisterForm.js":"4","/Users/yanelyayala/Documents/4351 Software Engineering/software-engineering-project/frontend/src/components/Register.js":"5","/Users/yanelyayala/Documents/4351 Software Engineering/software-engineering-project/frontend/src/components/Home.js":"6","/Users/yanelyayala/Documents/4351 Software Engineering/software-engineering-project/frontend/src/components/Reservation.js":"7","/Users/yanelyayala/Documents/4351 Software Engineering/software-engineering-project/frontend/src/components/TimeSlots.js":"8","/Users/yanelyayala/Documents/4351 Software Engineering/software-engineering-project/frontend/src/components/Login.js":"9","/Users/yanelyayala/Documents/4351 Software Engineering/software-engineering-project/frontend/src/components/GuestForm.js":"10"},{"size":324,"mtime":1668056269587,"results":"11","hashOfConfig":"12"},{"size":658,"mtime":1668652974765,"results":"13","hashOfConfig":"12"},{"size":783,"mtime":1668659758687,"results":"14","hashOfConfig":"12"},{"size":3607,"mtime":1668661612511,"results":"15","hashOfConfig":"12"},{"size":203,"mtime":1668146644019,"results":"16","hashOfConfig":"12"},{"size":105,"mtime":1668233077007,"results":"17","hashOfConfig":"12"},{"size":5544,"mtime":1668662613776,"results":"18","hashOfConfig":"12"},{"size":143,"mtime":1668293719819,"results":"19","hashOfConfig":"12"},{"size":1033,"mtime":1668659856196,"results":"20","hashOfConfig":"12"},{"size":1502,"mtime":1668655875177,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1p52sy1",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"/Users/yanelyayala/Documents/4351 Software Engineering/software-engineering-project/frontend/src/index.js",[],[],[],"/Users/yanelyayala/Documents/4351 Software Engineering/software-engineering-project/frontend/src/App.js",[],[],"/Users/yanelyayala/Documents/4351 Software Engineering/software-engineering-project/frontend/src/components/Navbar.js",[],[],"/Users/yanelyayala/Documents/4351 Software Engineering/software-engineering-project/frontend/src/components/RegisterForm.js",[],[],"/Users/yanelyayala/Documents/4351 Software Engineering/software-engineering-project/frontend/src/components/Register.js",[],[],"/Users/yanelyayala/Documents/4351 Software Engineering/software-engineering-project/frontend/src/components/Home.js",[],[],"/Users/yanelyayala/Documents/4351 Software Engineering/software-engineering-project/frontend/src/components/Reservation.js",["56","57"],[],"import React from 'react'\nimport { BsFillArrowRightCircleFill, BsFillArrowLeftCircleFill } from \"react-icons/bs\";\nimport { useState, useEffect, useRef } from 'react'\nimport GuestForm from './GuestForm';\nimport axios from 'axios'\nimport {CustomLink} from './Navbar'\n\nconst Reservation = () => {\n  let current = new Date()\n  let currentdate = current.toDateString()\n  const [days, setDays] = useState(1)\n  const [cdate, setcDate] = useState(currentdate)\n  const [times, setTimes] = useState([])\n  const [reserve, setReserve] = useState(false)\n  const [data, setData] = useState([])\n  const [dateChosen, setDateChosen] = useState(false)\n  const endpoint = 'http://localhost:4000/app/reservations'\n  const dataFetchedRef = useRef(false);\n  const displayTimes = ['8:00 AM', '8:30 AM', '9:00 AM', '9:30 AM', '10:00 AM', '10:30 AM', '11:00 AM', '11:30 AM', '12:00 PM',\n    '12:30 PM', '1:00 PM', '1:30 PM', '2:00 PM', '2:30 PM', '3:00 PM', '3:30 PM', '4:00 PM', '4:30 PM', '5:00 PM', '5:30 PM',\n    '6:00 PM', '6:30 PM', '7:00 PM', '7:30 PM', '8:00 PM', '8:30 PM', '9:00 PM', '9:30 PM', '10:00 PM']\n\n  //-------------------- Get Request --------------------\n  function getRequest () {\n    axios.get(endpoint, {})\n    .then(res => {\n      const resdata = res.data\n      setData(resdata)\n      //--------------- for rendering the first day -------------\n      if(cdate === currentdate)\n        renderTimeSlots(resdata)\n    })\n    .catch((error) =>\n        console.log('Error sending data:', error)\n  )}\n\n  //--------------------calls api once at render------------------------------\n  useEffect(() => {\n    if (dataFetchedRef.current) \n      return;\n    dataFetchedRef.current = true\n    getRequest()\n  })\n\n  function formatTimes(reservedTimes){\n    const arr = displayTimes.filter(i => !reservedTimes.includes(i))\n    let timeRows = []\n    let tempRow = []\n\n    let count = 0\n    for(let i = 0; i < arr.length; i++){\n      count++\n      tempRow.push(arr[i])\n      if((count === 3)){\n        timeRows.push(tempRow)\n        tempRow = []\n        count = 0\n      }\n      if(i === arr.length - 1 && count > 0)\n        timeRows.push(tempRow)\n    }\n    return timeRows\n  }\n\n  function renderTimeSlots(resdata){\n    const currentDay = resdata.filter(({date}) => date === cdate)\n    const reservedTimes = currentDay.map(value => value.time)\n    const timeSlots = formatTimes(reservedTimes)\n    setTimes(timeSlots)\n  }\n  \n  function nextDate () {\n    current.setDate(current.getDate() + days)\n    currentdate = current.toDateString()\n\n    setDays(days + 1)\n    setcDate(currentdate)\n  \n    const currentDay = data.filter(({date}) => date === currentdate)\n    const reservedTimes = currentDay.map(value => value.time)\n    const timeSlots = formatTimes(reservedTimes)\n    setTimes(timeSlots)\n  }\n\n  function previousDate () {\n    current.setDate(current.getDate() + (days - 2))\n    currentdate = current.toDateString()\n\n    setDays(days - 1)\n    setcDate(currentdate)\n\n    const currentDay = data.filter(({date}) => date === currentdate)\n    const reservedTimes = currentDay.map(value => value.time)\n    const timeSlots = formatTimes(reservedTimes)\n    setTimes(timeSlots)\n  } \n\n  function handleTimeSelection(dayChosen) {\n    setDateChosen(true)\n    setDateChosen(dayChosen)\n  }\n\n  const displayTimeSlots = times.map((ele, i) => {\n    return(\n      <div className='center' key={i}>\n        {ele[0] && <button type=\"button\" className=\"btn\" value={ele[0]} onClick={() => handleTimeSelection(ele[0])}>{ele[0]}</button>}\n        {ele[1] && <button type=\"button\" className=\"btn\" value={ele[1]} onClick={() => handleTimeSelection(ele[1])}>{ele[1]}</button>}\n        {ele[2] && <button type=\"button\" className=\"btn\" value={ele[2]} onClick={() => handleTimeSelection(ele[2])}>{ele[2]}</button>}\n      </div>\n    )\n  })\n\n  function handleChooseNewDate(){\n    \n  }\n\n  const handleReservation = (e) => {\n/*\n    const reservation = {\n      first: firstName,\n      last: lastName,\n      phone: phone,\n      email: email,\n      date: date,\n      time: time,\n      guests: guests\n    }*/\n  }\n\n  return (\n    <div className=\"prevent-select\">\n      <h1 className='sub-header'>Reservation</h1>\n\n      {reserve && !dateChosen && \n        <div>\n          <div className='center'>\n            <BsFillArrowLeftCircleFill onClick={() => days !== 1 ? previousDate() : '' } style={{cursor:'pointer'}} />\n            {`${' '}${cdate}${' '}`}\n            <BsFillArrowRightCircleFill onClick={() => {nextDate();}} style={{cursor:'pointer'}}/>\n          </div>\n          <div className='section'>\n            <p className='center'> Available times below</p><br></br>\n            {displayTimeSlots}\n          </div>\n        </div>\n      }\n\n      {!reserve && !dateChosen &&\n        <div className='center'>\n          <br></br>\n          <button type=\"button\" className=\"btn\" style={{background:'#000', color: '#fff'}} onClick={() => setReserve(true)}>Make a Reservation</button>\n        </div>\n      }\n\n      {dateChosen && \n        <div>\n          <div className='sub-container'>\n            <p>Date: {cdate}</p>\n            <p>Time: {dateChosen}</p>\n          </div>\n          <div className='center'>\n            <br></br>\n            <p className='mock-link' onClick={() => setDateChosen(false)}>Select different time or date</p>\n          </div>\n          <GuestForm />\n          <hr></hr><br></br>\n          <div className='center'>\n            <CustomLink to='/Login'>Or login here</CustomLink>\n          </div>\n        </div>\n      }\n      \n    </div>\n  )\n}\n\nexport default Reservation","/Users/yanelyayala/Documents/4351 Software Engineering/software-engineering-project/frontend/src/components/TimeSlots.js",["58"],[],"/Users/yanelyayala/Documents/4351 Software Engineering/software-engineering-project/frontend/src/components/Login.js",["59"],[],"import React from 'react'\nimport { useState } from 'react'\nimport axios from 'axios'\n\nconst Login = () => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!email || !password){\n        alert('Missing fields')\n        return\n        }\n    } \n\n  return (\n    <div>\n        <h1 className='sub-header'>Login</h1>\n        <form onSubmit={onSubmit}> \n            <div className='form-control'>\n                <label>Email</label>\n                <input type='text' placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)}/>\n            </div>\n\n            <div className='form-control'>\n                <label>Password</label>\n                <input type='password' placeholder='Password' value={password} onChange={(e) => setPassword(e.target.value)}/>\n            </div>\n\n            <input type='submit' value='Login' className='btn btn-block'/>\n        </form>\n    </div>\n  )\n}\n\nexport default Login","/Users/yanelyayala/Documents/4351 Software Engineering/software-engineering-project/frontend/src/components/GuestForm.js",["60"],[],"import React from 'react'\nimport { useState } from 'react'\n\nconst GuestForm = () => {\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [phone, setPhone] = useState('')\n    const [email, setEmail] = useState('')\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!firstName || !lastName || !phone || !email){\n            alert('Missing field')\n            return\n          }\n      \n          const guestInfomration = {\n            first: firstName,\n            last: lastName,\n            phone: phone,\n            email: email\n          }\n    } \n\n  return (\n    <form onSubmit={onSubmit}> \n      <div className='form-control'>\n        <label>First Name</label>\n        <input type='text' placeholder='First Name' value={firstName} onChange={(e) => setFirstName(e.target.value)}/>\n      </div>\n\n      <div className='form-control'>\n        <label>Last Name</label>\n        <input type='text' placeholder='Last Name' value={lastName} onChange={(e) => setLastName(e.target.value)}/>\n      </div>\n\n      <div className='form-control'>\n        <label>Phone Number</label>\n        <input type='text' placeholder='Phone Number' value={phone} onChange={(e) => setPhone(e.target.value)}/>\n      </div>\n\n      <div className='form-control'>\n        <label>Email</label>\n        <input type='text' placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)}/>\n      </div>\n    </form>\n  )\n}\n\nexport default GuestForm",{"ruleId":"61","severity":1,"message":"62","line":113,"column":12,"nodeType":"63","messageId":"64","endLine":113,"endColumn":31},{"ruleId":"61","severity":1,"message":"65","line":117,"column":9,"nodeType":"63","messageId":"64","endLine":117,"endColumn":26},{"ruleId":"61","severity":1,"message":"66","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":13},{"ruleId":"61","severity":1,"message":"66","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":13},{"ruleId":"61","severity":1,"message":"67","line":18,"column":17,"nodeType":"63","messageId":"64","endLine":18,"endColumn":33},"no-unused-vars","'handleChooseNewDate' is defined but never used.","Identifier","unusedVar","'handleReservation' is assigned a value but never used.","'axios' is defined but never used.","'guestInfomration' is assigned a value but never used."]